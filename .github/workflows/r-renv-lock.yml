on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/r-renv-lock.yml

name: Generate renv.lock

concurrency:
  group: r-renv-lock-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  r-renv-lock-gen:
    if: "!contains(github.event.head_commit.message, 'Automatic renv profile update.')"
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-20.04, r: '4.0.5', repos: 'https://cran.microsoft.com/snapshot/2021-03-31/'}
          - {os: ubuntu-20.04, r: '4.1.0', repos: 'https://cran.microsoft.com/snapshot/2022-03-10/'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: true
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      R_REPOS: ${{ matrix.config.repos }}
      RENV_PROFILE_NAME: ${{ matrix.config.r }}

    steps:
      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v5.4

      - name: Checkout repo (PR) ðŸ›Ž
        uses: actions/checkout@v3
        if: github.event_name == 'pull_request'
        with:
          ref: ${{ steps.branch-name.outputs.head_ref_branch }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Collect dependencies
        run: |
          source("renv/activate.R")
          renv_profile <- Sys.getenv("RENV_PROFILE_NAME", "dev")
          cran_r_release <- Sys.getenv("R_REPOS", "https://cran.microsoft.com/snapshot/2021-03-31")
          cran_latest <- Sys.getenv("CRAN_R_LATEST", "https://cloud.r-project.org")

          renv_install_suggests <- function(package) {
            loc_path <- find.package("admiraldev", lib.loc = .libPaths(), quiet = TRUE)
            suggests <-
              renv:::renv_dependencies_discover_description(loc_path, fields = "Suggests")[["Package"]]
            suggests <- suggests[!(suggests %in% c("admiral", "admiraldev", "admiralci", "admiral.test"))]
            renv::install(suggests)
          }

          renv::activate(profile = renv_profile)
          # CRAN repo from R release
          options("repos" = c("MRAN" = cran_r_release))

          renv::install("remotes")
          renv::install("openpharma/staged.dependencies")

          # Packages from stage dependencies to ignore
          renv::settings$ignored.packages(c("admiral", "admiraldev", "admiral.test", "admiralci"))

          renv::install("pharmaverse/admiral.test@devel")
          renv::install("pharmaverse/admiraldev@devel")
          renv_install_suggests("admiraldev")
          renv_install_suggests("admiral.test")

          # Install dependencies
          renv::install()

          # Set newest CRAN for few packages upgrade
          options("repos" = c(
            "CRAN" = cran_latest,
            "MRAN" = cran_r_release
          ))

          # Upgrade packages
          remotes::install_version("processx", version = "3.6.1", upgrade = "never")
          remotes::install_version("callr", version = "3.7.3", upgrade = "never")
          remotes::install_version("pkgdown", version = "2.0.7", upgrade = "never")
          remotes::install_version("lintr", version = "3.0.2", upgrade = "never")
          remotes::install_version("cli", version = "3.3.0", upgrade = "never")
          remotes::install_version("roxygen2", version = "7.2.1", upgrade = "never")

          renv::activate(profile = renv_profile)

          renv::settings$snapshot.type("custom")
          .get_dependencies <- function(project_dir) {

            admdev_loc <- find.package("admiraldev", lib.loc = .libPaths(), quiet = TRUE)
            adm_dev_suggests <- if(length(admdev_loc) != 0) {
              renv:::renv_dependencies_discover_description(admdev_loc, fields = c("Depends", "Imports", "LinkingTo", "Suggests"))
            } else {
              data.frame(Packages = character(0))
            }
            suggests_packages <- renv:::renv_dependencies_discover_description(project_dir, fields = "Suggests")

            packages <- names(
              renv:::renv_package_dependencies(
                unique(c(
                  project_dir,
                  adm_dev_suggests[["Package"]],
                  suggests_packages[["Package"]],
                  c("staged.dependencies")
                ))
              )
            )
            packages[!(packages %in% c("admiral", "admiraldev", "admiralci", "admiral.test"))]
          }

          options(renv.snapshot.filter = .get_dependencies)

          renv::snapshot(force = TRUE)
        shell: Rscript {0}

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Automatic renv profile update.
          file_pattern: 'renv/profiles/*'
          commit_user_name: pharmaverse-bot
          commit_user_email: 113703390+pharmaverse-bot@users.noreply.github.com
          create_branch: true
